package com.yuchao.ui;

import android.app.ProgressDialog;
import android.graphics.Bitmap;
import android.os.Bundle;
import android.widget.Toast;

import com.gfan.http.HttpException;
import com.gfan.sbbs.MyApplication;
import com.gfan.task2.TaskResult;
import com.gfan.ui.base.BaseActivity;
import com.gfan.ui.base.TouchImageView;
import com.yuchao.task.GenericTask;
import com.yuchao.task.TaskAdapter;
import com.yuchao.task.TaskListener;

public class FullImageView extends BaseActivity {
	private TouchImageView fullImageView;
	private Bitmap bitmap;
	private GenericTask mRetrievePhotoTask;
	private String mImageUrl, errorCause;
	public static final String EXTRA_IMAGE_URL = "image_url";
	private TaskListener mRetrievePhotoListener = new TaskAdapter() {
		private ProgressDialog pdialog;

		@Override
		public String getName() {
			return null;
		}

		@Override
		public void onPreExecute(GenericTask task) {
			super.onPreExecute(task);
			pdialog = new ProgressDialog(FullImageView.this);
			pdialog.setMessage(getResources().getString(R.string.loading));
			pdialog.show();
			pdialog.setCanceledOnTouchOutside(false);
		}

		@Override
		public void onPostExecute(GenericTask task, TaskResult result) {
			super.onPostExecute(task, result);
			pdialog.dismiss();
			if (result == TaskResult.OK) {
				fullImageView.setImageBitmap(bitmap);
			} else {
				Toast.makeText(FullImageView.this, errorCause,
						Toast.LENGTH_SHORT).show();
			}

		}

	};

	@Override
	protected void _onCreate(Bundle savedInstanceState) {
		super._onCreate(savedInstanceState);
		getSupportActionBar().setHomeButtonEnabled(true);
		getSupportActionBar().setDisplayHomeAsUpEnabled(true);
		initArgs();
		doRetrieve();
	}

	private void initArgs() {
		fullImageView = new TouchImageView(this);
		fullImageView.setId(R.id.full_image);
		setContentView(fullImageView);
		mImageUrl = getIntent().getExtras().getString(EXTRA_IMAGE_URL);
	}

	private void doRetrieve() {
		mRetrievePhotoTask = new RetrievePhotoTask();
		mRetrievePhotoTask.setListener(mRetrievePhotoListener);
		mRetrievePhotoTask.execute();
	}

	@Override
	protected void onDestroy() {
		if (null != mRetrievePhotoTask
				&& mRetrievePhotoTask.getStatus() == GenericTask.Status.RUNNING) {
			mRetrievePhotoTask.cancel(true);
		}
		if (null != bitmap) {
			bitmap.recycle();
		}
		super.onDestroy();

	}

	private class RetrievePhotoTask extends GenericTask {

		@Override
		protected TaskResult _doInBackground(String... params) {
			try {
				bitmap = MyApplication.bbsOp.getBitmap(mImageUrl);
			} catch (HttpException e) {
				e.printStackTrace();
				errorCause = e.getMessage();
				return TaskResult.Failed;
			}
			return TaskResult.OK;
		}

	}

	@Override
	protected void processUnLogin() {
		// TODO Auto-generated method stub

	}

	@Override
	protected void setup() {

	}

}
