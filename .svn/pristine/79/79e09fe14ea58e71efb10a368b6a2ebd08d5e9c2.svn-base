package com.yuchao.util;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.ArrayList;
import java.util.List;
import java.util.zip.GZIPInputStream;

import org.apache.http.Header;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.StatusLine;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.protocol.HTTP;
import org.apache.http.util.EntityUtils;

import android.util.Log;

public class SBBSCrawer {
	// 定义HttpClient
	private static DefaultHttpClient httpClient = CustomerHttpClient
			.getHttpClient();

	private static HttpResponse getRes(String url) throws ClientProtocolException, IOException{
		Log.i("getUrlContent", url);
		DefaultHttpClient httpClient = CustomerHttpClient.getHttpClient();
		HttpGet httpget = new HttpGet(url);
		httpget.addHeader("Accept-Encoding", "gzip, deflate");
		httpget.addHeader("Accept",
				"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8");
		httpget.addHeader("Accept-Language", "en-us,en;q=0.5");
		HttpResponse res = httpClient.execute(httpget);
		// Accept-Language en-us,en;q=0.5
		StatusLine status = res.getStatusLine();
		if (status.getStatusCode() == 404) {
			throw new IOException();
		}
		return res;
		
	}
	/**
	 * 抓取内容
	 * 
	 * @param url
	 * @return
	 * @throws ClientProtocolException
	 * @throws IOException
	 */
	public static String getUrlContent(String url)
			throws ClientProtocolException, IOException {
		HttpResponse res = getRes(url);
		HttpEntity entity = res.getEntity();
		Header[] headers = res.getHeaders("Content-Encoding");
		boolean isgzip = false;
		String content = "";
		if (headers != null && headers.length != 0) {
			for (Header header : headers) {
				String s = header.getValue();
				if (s.contains("gzip")) {
					isgzip = true;
				}
			}
		}
		if (isgzip) {
			InputStream inStream = entity.getContent();
			BufferedReader br = new java.io.BufferedReader(
					new InputStreamReader(new GZIPInputStream(inStream),
							SBBSConstants.SBBS_ENCODING));
			String line;
			StringBuilder sb = new StringBuilder();
			while ((line = br.readLine()) != null) {
				sb.append(line);
				sb.append("\n");
			}
			br.close();
			content = sb.toString();
		} else {
			content = EntityUtils.toString(entity, SBBSConstants.SBBS_ENCODING);
		}
		// content = EntityUtils.toString(entity, SBBSConstants.SBBS_ENCODING);
		if (content.contains("503 Service Temporarily Unavailable")) {
			Log.i("SBBSCrawer", content);
			throw new IOException();
		}
		return content;
	}

	public static void destroy() {
		CustomerHttpClient.getHttpClient().getConnectionManager().shutdown();
		CustomerHttpClient.clear();
	}

	/**
	 * 获取输出流
	 * @param url
	 * @return
	 * @throws ClientProtocolException
	 * @throws IOException
	 */
	public static InputStream getInStream(String url) throws ClientProtocolException, IOException{
		HttpResponse res = getRes(url);
		return res.getEntity().getContent();
	}
	/**
	 * 使用API发文
	 * 
	 * @param params
	 * @return
	 * @throws ClientProtocolException
	 * @throws IOException
	 */
	public static String doPostAPI(String... params)
			throws ClientProtocolException, IOException {
		String token = params[4];
		String url = "http://bbs.seu.edu.cn/api/topic/post.json?type=1&token="
				+ token;
		if (params[0].equals("Psychology")) {// Psychology发文使用默认匿名
			url = url.concat("&anony=1");
		}
		HttpPost post = new HttpPost(url);
		List<NameValuePair> formparams = new ArrayList<NameValuePair>();
		formparams.add(new BasicNameValuePair("board", params[0]));// 版面
		formparams.add(new BasicNameValuePair("reid", params[1]));// 回复帖子的gid
		formparams.add(new BasicNameValuePair("title", params[2]));// 帖子标题
		formparams.add(new BasicNameValuePair("content", params[3]));// 帖子内容

		UrlEncodedFormEntity entity;
		entity = new UrlEncodedFormEntity(formparams, HTTP.UTF_8);
		post.setEntity(entity);
		HttpResponse response = httpClient.execute(post);
		StatusLine status = response.getStatusLine();
		if (status.getStatusCode() == 404) {
			throw new IOException();
		}
		HttpEntity e = response.getEntity();
		String content = EntityUtils.toString(e, SBBSConstants.SBBS_ENCODING);
		return content;
	}

	/**
	 * 编辑帖子
	 * 
	 * @param params
	 * @return
	 * @throws ClientProtocolException
	 * @throws IOException
	 */
	public static String doEdit(String... params)
			throws ClientProtocolException, IOException {
		String token = params[4];
		String url = "http://bbs.seu.edu.cn/api/topic/edit.js?token=" + token;
		if (params[0].equals("Psychology")) {// Psychology发文使用默认匿名
			url = url.concat("&anony=1");
		}
		HttpPost post = new HttpPost(url);
		List<NameValuePair> formparams = new ArrayList<NameValuePair>();
		formparams.add(new BasicNameValuePair("board", params[0]));// 版面
		formparams.add(new BasicNameValuePair("id", params[1]));// 回复帖子的gid
		formparams.add(new BasicNameValuePair("title", params[2]));// 帖子标题
		formparams.add(new BasicNameValuePair("content", params[3]));// 帖子内容

		UrlEncodedFormEntity entity;
		entity = new UrlEncodedFormEntity(formparams, HTTP.UTF_8);
		post.setEntity(entity);
		HttpResponse response = httpClient.execute(post);
		StatusLine status = response.getStatusLine();
		if (status.getStatusCode() == 404) {
			throw new IOException();
		}
		HttpEntity e = response.getEntity();
		String content = EntityUtils.toString(e, SBBSConstants.SBBS_ENCODING);
		return content;
	}

	/**
	 * 发信
	 * 
	 * @param params
	 * @return
	 * @throws ClientProtocolException
	 * @throws IOException
	 */
	public static boolean doPostMail(String... params)
			throws ClientProtocolException, IOException {
		HttpPost post = new HttpPost(params[0]);
		List<NameValuePair> formparams = new ArrayList<NameValuePair>();
		formparams.add(new BasicNameValuePair("title", params[1]));// 标题
		formparams.add(new BasicNameValuePair("text", params[2]));// 内容
		formparams.add(new BasicNameValuePair("userid", params[3]));
		UrlEncodedFormEntity entity;
		try {
			entity = new UrlEncodedFormEntity(formparams, HTTP.UTF_8);
		} catch (UnsupportedEncodingException e1) {
			Log.i("PostMailTask", "UnsupportedEncodingException");
			return false;
		}
		post.setEntity(entity);
		post.setHeader("User-Agent",
				"Mozilla/5.0 (Windows NT 6.1; rv:10.0.1) Gecko/20100101 Firefox/10.0.1");
		// post.addHeader("Accept-Encoding", "gzip, deflate");//必须加，否则无法发送成功...
		HttpResponse response = httpClient.execute(post);
		HttpEntity e = response.getEntity();
		String content = EntityUtils.toString(e, SBBSConstants.SBBS_ENCODING);
		Log.i("PostMailTask", content);
		if (content.contains("发送成功！返回")) {
			return true;
		}
		return false;
	}

	/**
	 * 处理登录
	 * @param params
	 * @return
	 * @throws ClientProtocolException
	 * @throws IOException
	 */
	public static String doLogin(String... params)
			throws ClientProtocolException, IOException {
		HttpPost httpPost = new HttpPost("http://bbs.seu.edu.cn/api/token.json");
		List<NameValuePair> formparams = new ArrayList<NameValuePair>();
		formparams.add(new BasicNameValuePair("user", params[0]));// 用户名
		formparams.add(new BasicNameValuePair("pass", params[1]));// 密码
		UrlEncodedFormEntity entity;
		entity = new UrlEncodedFormEntity(formparams, HTTP.UTF_8);
		httpPost.setEntity(entity);
		HttpResponse response = httpClient.execute(httpPost);
		HttpEntity e = response.getEntity();
		String content = EntityUtils.toString(e, SBBSConstants.SBBS_ENCODING);
		return content;
	}
}
