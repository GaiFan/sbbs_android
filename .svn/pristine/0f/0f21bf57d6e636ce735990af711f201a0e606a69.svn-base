package com.gfan.ui.Adapter;

import java.util.List;

import android.content.Context;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.TextView;

import com.yuchao.domain.Topic;
import com.yuchao.domain.User;
import com.yuchao.ui.R;

public class RecommendAdapter extends BaseAdapter{
    private List<Topic> recommends;
    public Context context;
	public RecommendAdapter(Context con,List<Topic> list){
		recommends = list;
		context = con;
	}
	@Override
	public int getCount() {
		// TODO Auto-generated method stub
		return recommends.size();
	}
	@Override
	public Object getItem(int position) {
		// TODO Auto-generated method stub
		return recommends.get(position);
	}
	@Override
	public long getItemId(int position) {
		// TODO Auto-generated method stub
		return position;
	}
	@Override
	public View getView(int position, View convertView, ViewGroup parent) {
		//设定这个条目的内容
		Log.i("RecommendAdapter","正在加载第 "+position+" 个项目");
		ViewHolder holder = null;
		if(convertView == null){
			LayoutInflater inflater = (LayoutInflater)context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
			convertView =  inflater.inflate(R.layout.listview_item_top_ten, null);
			holder = new ViewHolder();
			holder.txt_index = (TextView) convertView.findViewById(R.id.list_top_ten_textIndex);
			holder.txt_author = (TextView) convertView.findViewById(R.id.list_top_ten_textAuthor);
			holder.txt_title = (TextView) convertView.findViewById(R.id.list_top_ten_textTitle);
			holder.txt_board = (TextView) convertView.findViewById(R.id.list_top_ten_textBoard);
			convertView.setTag(holder);
		}else{
			holder = (ViewHolder) convertView.getTag();
		}
		holder.txt_index.setText(String.valueOf(position));
		holder.txt_author.setText(recommends.get(position).getAuthor());
		holder.txt_title.setText(recommends.get(position).getTitle());
		holder.txt_board.setText(recommends.get(position).getTalkSpace());
		return convertView;
	}
	
	 //定义静态类用于获取列表中每一个条目数据的更新
	 private static class ViewHolder {
	        TextView txt_index;
			TextView txt_author;
			TextView txt_title;
			TextView txt_board;
		}
 }
