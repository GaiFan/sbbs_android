package com.yuchao.domain;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import java.util.List;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class Topic implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private String talkSpace;// 讨论区
	private String title;// 帖子标题
	private String author;// 帖子作者
	private String popularity;// 表示人气
	private String url;// 帖子的链接
	private String content;// 文章内容
	private String time;// 发帖时间
	private boolean isOnTop;// 是否置顶
	private String quote;// 引文
	private String quoter;
	private String sourceIP;// 来源行
	private String num;// 帖子序号
	private int id; // 帖子序号
	private boolean unRead,noresp,hasAtt;
	private int replies;
	private int gid;
	private int reid;
	private List<Attachment> attList;

	public String getTime() {
		return time;
	}

	public Topic setTime(String time) {
		this.time = time;
		return this;
	}

	public String getTalkSpace() {
		return talkSpace;
	}

	public Topic() {
		super();
	}

	public Topic(String talkSpace, String title, String author,
			String popularity, String url) {
		super();
		this.talkSpace = talkSpace;
		this.title = title;
		this.author = author;
		this.popularity = popularity;
		this.url = url;
	}

	public Topic setTalkSpace(String talkSpace) {
		this.talkSpace = talkSpace;
		return this;
	}

	public String getPopularity() {
		return popularity;
	}

	public Topic setPopularity(String popularity) {
		this.popularity = popularity;
		return this;
	}

	public String getAuthor() {
		return author;
	}

	public Topic setAuthor(String author) {
		this.author = author;
		return this;
	}

	public String getTitle() {
		return title;
	}

	public Topic setTitle(String title) {
		this.title = title;
		return this;
	}

	@Override
	public String toString() {
		return "Topic [talkSpace=" + talkSpace + ", title=" + title
				+ ", author=" + author + ", popularity=" + popularity
				+ ", url=" + url + ", time=" + time + "content=" + content
				+ "]";
	}

	public Topic setContent(String content) {
		this.content = content;
		return this;
	}

	public String getContent() {
		return content;
	}

	public Topic setOnTop(boolean isOnTop) {
		this.isOnTop = isOnTop;
		return this;
	}

	public boolean isOnTop() {
		return isOnTop;
	}

	public Topic setQuote(String quote) {
		this.quote = quote;
		return this;
	}

	public String getQuote() {
		return quote;
	}

	public Topic setSourceIP(String sourceIP) {
		this.sourceIP = sourceIP;
		return this;
	}

	public String getSourceIP() {
		return sourceIP;
	}

	public Topic setNum(String num) {
		this.num = num;
		return this;
	}

	public String getNum() {
		return num;
	}

	public Topic setUnRead(boolean unRead) {
		this.unRead = unRead;
		return this;
	}

	public boolean isUnRead() {
		return this.unRead;
	}

	public Topic setUrl(String url) {
		this.url = url;
		return this;
	}

	public String getUrl() {
		return url;
	}

	public Topic setId(int id) {
		this.id = id;
		return this;
	}

	public int getId() {
		return id;
	}

	public Topic setGid(int gid) {
		this.gid = gid;
		return this;
	}

	public int getGid() {
		return gid;
	}

	public Topic setReid(int reid) {
		this.reid = reid;
		return this;
	}

	public int getReid() {
		return reid;
	}

	public void setQuoter(String quoter) {
		this.quoter = quoter;
	}

	public String getQuoter() {
		return quoter;
	}

	public void setReplies(int replies) {
		this.replies = replies;
	}

	public int getReplies() {
		return replies;
	}
	public Topic setAttList(List<Attachment> list){
		this.attList = list;
		return this;
	}
	
	public List<Attachment> getAttList(){
		return this.attList;
	}
	
	public static Topic parseTopic(JSONObject threadJson) throws JSONException {
		Topic topic = new Topic();
		int id = threadJson.getInt("id");
		String board = threadJson.getString("board");
		String author = threadJson.getString("author");
		long milliseconds = threadJson.getLong("time");
		String title = threadJson.getString("title");
		if(threadJson.has("reid")){
			int reid = threadJson.getInt("reid");
			topic.setReid(reid);
		}
		if(threadJson.has("read")){
			String read = threadJson.getString("read");
			topic.setPopularity(read);
		}
		if(threadJson.has("replies")){
			int replies = threadJson.getInt("replies");
			topic.setReplies(replies);
		}
		if(threadJson.has("gid")){
			int gid = threadJson.getInt("gid");
			topic.setGid(gid);
		}
		String time;
		if (milliseconds < 30000000) {
			// 全站搜索返回的不是时间戳，此处简单处理
			time = String.valueOf(milliseconds);
		} else {
			Date date = new Date(milliseconds * 1000);
			SimpleDateFormat format = new SimpleDateFormat(
					"MMM dd HH:mm:ss yyyy", Locale.ENGLISH);
			time = format.format(date);
		}
		if(threadJson.has("content")){
			String content = threadJson.getString("content");
			topic.setContent(content);
		}
		topic.setAuthor(author).setId(id)
				.setTalkSpace(board).setTime(time).setTitle(title);
		if (threadJson.has("unread")) {
			boolean unread = threadJson.getBoolean("unread");
			topic.setUnRead(unread);
		}
		if (threadJson.has("top")) {
			boolean top = threadJson.getBoolean("top");
			topic.setOnTop(top);
		}
		StringBuffer sb = new StringBuffer();
		if (threadJson.has("quoter")) {
			String quoter = threadJson.getString("quoter");
			topic.setQuoter(quoter);
		}
		if (threadJson.has("quote")) {
			String quote = threadJson.getString("quote");
			sb.append(quote);
		}
		if(threadJson.has("attachments")){
			topic.setHasAtt(true);
			JSONArray attArray = threadJson.getJSONArray("attachments");
			List<Attachment> list = new ArrayList<Attachment>();
			for(int i = 0,len = attArray.length();i < len;i++){
				Attachment att = Attachment.parseAtt(attArray.getJSONObject(i));
				list.add(att);
			}
			topic.setAttList(list);
		}else{
			topic.setHasAtt(false);
		}
		topic.setQuote(sb.toString());
		return topic;
	}

	public void setHasAtt(boolean hasAtt) {
		this.hasAtt = hasAtt;
	}

	public boolean isHasAtt() {
		return hasAtt;
	}
}
